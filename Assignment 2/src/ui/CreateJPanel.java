/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

//import model.Product;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import model.Product;
import model.ProductHistory;


/**
 *
 * @author kiranreddy
 */
public class CreateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateJPanel
     */
    ProductHistory history;
    
    public CreateJPanel(ProductHistory history) {
        initComponents();
        this.history = history;
    }

    //        vs.setCarYear(carYear);   
//        vs.setCarModelnum(carModelnum);
//        vs.setCarSeats(carSeats);
//        vs.setCarCity(carCity);
//        vs.setCarAvaliablity(CarAvaliablity);
//        vs.setCarExpired(carExpired);
//        vs.setCarSerialnum(carSerialnum);
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblCompany = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        lblSeats = new javax.swing.JLabel();
        lblSerial = new javax.swing.JLabel();
        lblModel = new javax.swing.JLabel();
        lblAvail = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblExpiry = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        txtYear = new javax.swing.JTextField();
        txtSeats = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        txtSerial = new javax.swing.JTextField();
        txtExpiry = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtCompany = new javax.swing.JTextField();
        btnYes = new javax.swing.JRadioButton();
        btnNo = new javax.swing.JRadioButton();

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Car Details");

        lblCompany.setText("Company:");

        lblYear.setText("Year of Manufactured:");

        lblSeats.setText("Avaliable Seats:");

        lblSerial.setText("Serial Number:");

        lblModel.setText("Model Number:");

        lblAvail.setText("Availability:");

        lblCity.setText("City:");

        lblExpiry.setText("Maintainance Expiry date:");

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        txtYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtYearActionPerformed(evt);
            }
        });

        txtModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelActionPerformed(evt);
            }
        });

        txtCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCompanyActionPerformed(evt);
            }
        });

        btnYes.setText("Yes");

        btnNo.setText("No");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSubmit)
                .addGap(246, 246, 246))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblYear)
                            .addComponent(lblCompany)
                            .addComponent(lblSeats)
                            .addComponent(lblSerial)
                            .addComponent(lblModel)
                            .addComponent(lblAvail)
                            .addComponent(lblCity)
                            .addComponent(lblExpiry))
                        .addGap(75, 75, 75)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtExpiry, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                .addComponent(txtCity)
                                .addComponent(txtCompany)
                                .addComponent(txtYear)
                                .addComponent(txtSeats)
                                .addComponent(txtSerial)
                                .addComponent(txtModel))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnYes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNo)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCompany)
                    .addComponent(txtCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYear)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeats)
                    .addComponent(txtSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSerial)
                    .addComponent(txtSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModel)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvail)
                    .addComponent(btnYes)
                    .addComponent(btnNo))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtExpiry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblExpiry))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(btnSubmit)
                .addGap(38, 38, 38))
        );

        jScrollPane1.setViewportView(jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:       
//        String carCompany = txtCompany.getText();
//        int carYear = Integer.parseInt(txtYear.getText());
//        String carModelnum = txtModel.getText();
//        int carSeats = Integer.parseInt(txtSeats.getText());
//        String carCity = txtCity.getText();
//        int carExpired = Integer.parseInt(txtExpiry.getText());
//        int carSerialnum = Integer.parseInt(txtSerial.getText());
//        boolean CarAvaliablity = boxAvali.getSelectedItem().toString().equals("Yes") ? true : false;
        
        boolean validCompany = txtCompany.getText().isEmpty() ? false : this.validCompany(txtCompany.getText());
        boolean validyear = txtYear.getText().isEmpty() ? false : this.validyear();
        boolean validSeat = txtSeats.getText().isEmpty() ? false : this.validSeat();
        boolean validModel = txtModel.getText().isEmpty() ? false : this.validModel();
        boolean validCity = txtCity.getText().isEmpty() ? false : this.validCity(txtCity.getText());
        boolean validExpiry = txtExpiry.getText().isEmpty() ? false : this.validExpiry();
        boolean validSerial = txtSerial.getText().isEmpty() ? false : this.validSerial();
//        boolean carAvail = btnYes.getText().isEmpty() ? false : this.validAvail();
        String Available ="";
        if(btnYes.isSelected())
        {
            Available = "yes";
        }
        else if(btnNo.isSelected()){
            Available = "no";  
        }
        
        
        
        if( validCompany && validyear && validModel &&
              validSeat && validCity && validExpiry && this.validateSerial()){
//             validSerial
        Product vs = history.addnewProducts();
        //Try this
        vs.setCarCompany(txtCompany.getText());
        vs.setCarYear(Integer.parseInt(txtYear.getText()));
        vs.setCarSeats(Integer.parseInt(txtSeats.getText()));
        vs.setCarCity(txtCity.getText());
        vs.setCarSerialnum(Integer.parseInt(txtSerial.getText()));
        vs.setCarModelnum(txtModel.getText());
        vs.setCarAvaliablity(Available);
        vs.setCarExpired(txtExpiry.getText());

        
        JOptionPane.showMessageDialog(this, "New Car added");
        
        
        }
        else{
            String errormsg = String.format("Car details not added \n"
            + "Company name valid: %s \n "
            + "Manufactured Year valid: %s \n"
            + "Avaliable seats valid: %s \n"
            + "Serial Number valid: %s \n"
            + "Model Number valid: %s \n"
            + "Avaliablity vlaid: %s \n"
            + " City valid: %s \n"
            + " Expirey date valid: %s \n",
              validCompany, validyear, validSeat, validSerial, validModel, Available,
               validCity, validExpiry);
//            UIManager.put("OptionPane.")
            JOptionPane.showMessageDialog(this, errormsg);
        }
        txtCompany.setText("");
        txtYear.setText("");
        txtSeats.setText("");
        txtSerial.setText("");
        txtModel.setText("");
        txtCity.setText("");
        txtExpiry.setText("");
        
        
        
        
      
        
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtYearActionPerformed

    private void txtModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelActionPerformed

    private void txtCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCompanyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCompanyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton btnNo;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JRadioButton btnYes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAvail;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCompany;
    private javax.swing.JLabel lblExpiry;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblSeats;
    private javax.swing.JLabel lblSerial;
    private javax.swing.JLabel lblYear;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCompany;
    private javax.swing.JTextField txtExpiry;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtSeats;
    private javax.swing.JTextField txtSerial;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
    


    private boolean validateSerial(){
        int Serial = Integer.parseInt(txtSerial.getText());
        if(Product.unSerial.add(Serial)){
            return true;
        }
        return false;
    }

    // This will validate if the company name is proper
    // We cannot enter numeric values
    private boolean validCompany(String name){
        int i;
        int stringlen = name.trim().length();
        for(i = 0; i < stringlen;i ++){
            if((stringlen != 0) && !(Character.isAlphabetic(name.charAt(i)))){
                return false;
            }
        }
        return true;
    }
    //This will validate the year of manufacturing:
    private boolean validyear(){
        String year = txtYear.getText();
        int carYear = Integer.parseInt(year);
        Pattern yearPattern = Pattern.compile("[0-9]{4}");
        Matcher yearMatch = yearPattern.matcher(year);
        if(yearMatch.matches()){
            if(carYear >= 1990 && carYear <= 2022){
                return true;
            }
        }
        return false;
    }
    private boolean validSerial(){
        String serial = txtSerial.getText();
        int s = Integer.parseInt(serial);
        Pattern yearPattern = Pattern.compile("[0-9]{4}");
        Matcher seating = yearPattern.matcher(serial);
        if(seating.matches()){
            return true;
        }
        return false;
    }
    // This will validate the year
    private boolean validSeat(){
        String seats = txtSeats.getText();
        int s = Integer.parseInt(seats);
        Pattern yearPattern = Pattern.compile("[0-9]{1}");
        Matcher seating = yearPattern.matcher(seats);
        if(seating.matches()){
            if(s >= 1 && s <= 8){
                return true;
            }
        }
        return false;
    }
    //This is to validate model number
    //This will accept only aplhabets and numbers
    private boolean validModel(){
        String model = txtModel.getText();
        Pattern modelPattern = Pattern.compile("[0-9A-Za-z\\s-]+");
        Matcher modelMatcher = modelPattern.matcher(model);
        if(modelMatcher.matches()){
            return true;
        }
        return false;
    }
    //This will validate the city name
    private boolean validCity(String name){
        int i;
        int stringlen = name.trim().length();
        for(i = 0; i < stringlen;i ++){
            if((stringlen != 0) && !(Character.isAlphabetic(name.charAt(i)))){
                return false;
            }
        }
        return true;
    }
    //This will validate the date format for expirey certificate
    private boolean validExpiry(){
	String expiry = txtExpiry.getText();
        SimpleDateFormat d = new SimpleDateFormat("MM/dd/yyyy");
        d.setLenient(false);
        try{
            d.parse(expiry);
        }
        catch (ParseException D){
            return false;
        }
        return true;
    }
//    private boolean validAvail(){
//        String Available ="";
//        if(btnYes.isSelected())
//        {
//            Available = "yes";
//            return true;
//        }
//        else if(btnNo.isSelected()){
//            Available = "no";  
//        }
//        return false;
//    }
    
        
}
