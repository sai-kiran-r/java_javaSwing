/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Dimension;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import model.Patient.Patient;
import model.Patient.PatientDirectory;
import model.Person.Person;

/**
 *
 * @author kiranreddy
 */
public class SummaryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SummaryJPanel
     */
    PatientDirectory patientDirectory;
    
    public SummaryJPanel(PatientDirectory patientDirectory) {
        initComponents();
        this.patientDirectory = patientDirectory;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitel = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        txtCommunity = new javax.swing.JTextField();
        btnsearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSummary = new javax.swing.JTable();

        lblTitel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTitel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitel.setText("Community Summary Details");

        lblCommunity.setText("Community:");

        txtCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCommunityActionPerformed(evt);
            }
        });

        btnsearch.setText("Search");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        tblSummary.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Age Group", "Patient Count"
            }
        ));
        jScrollPane1.setViewportView(tblSummary);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(220, 220, 220)
                            .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(276, 276, 276)
                            .addComponent(btnsearch))))
                .addContainerGap(221, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(lblTitel)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCommunity)
                    .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(btnsearch)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        // TODO add your handling code here:
        
        
        boolean validCommunity = this.validateCommunity(txtCommunity);
        
        
        
        String community = txtCommunity.getText();
        ArrayList<Patient> tempList = new ArrayList<Patient>();
        
        
        for(Patient p : this.patientDirectory.getPatientList()){
            if(p.getCommunity().equals(community)){
                tempList.add(p);
            }
        }
        long[] getCountOfAge = this.getCountOfAge(tempList);
        String[] category = {"0-10", "11-20", "21-30", "31-40", "41-50", 
                            "51-60", "61-70", "71-80", "81-90", "91-100"}; 
        
        this.populateTable(category, getCountOfAge);
        
//        else{
//            UIManager.put("OptionPane.minimumSize",new Dimension(100,200));
//            JOptionPane.showMessageDialog(this, "Enter valid community");
//        }
        
//        String selectedCommunity = comboCommunity.getSelectedItem().toString();
//        ArrayList<Patient> tempPatientList = new ArrayList<Patient>();
//        
//        for(Patient p : this.patientDirec.getPatientList()){
//            if(p.getCommunityName().equals(selectedCommunity)){
//                tempPatientList.add(p);
//            }
//        }

       

        

        
    }//GEN-LAST:event_btnsearchActionPerformed

    private void txtCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCommunityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCommunityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblTitel;
    private javax.swing.JTable tblSummary;
    private javax.swing.JTextField txtCommunity;
    // End of variables declaration//GEN-END:variables

    private long[] getCountOfAge(ArrayList<Patient> tempList){
        long[] count = new long[10];
        count[0] = tempList.stream().filter(c -> c.getAge() > 0 && c.getAge() <= 10).count();
        count[1] = tempList.stream().filter(c -> c.getAge() > 10 && c.getAge() <= 20).count();
        count[2] = tempList.stream().filter(c -> c.getAge() > 20 && c.getAge() <= 30).count();
        count[3] = tempList.stream().filter(c -> c.getAge() > 30 && c.getAge() <= 40).count();
        count[4] = tempList.stream().filter(c -> c.getAge() > 40 && c.getAge() <= 50).count();
        count[5] = tempList.stream().filter(c -> c.getAge() > 50 && c.getAge() <= 60).count();
        count[6] = tempList.stream().filter(c -> c.getAge() > 60 && c.getAge() <= 70).count();
        count[7] = tempList.stream().filter(c -> c.getAge() > 70 && c.getAge() <= 80).count();
        count[8] = tempList.stream().filter(c -> c.getAge() > 80 && c.getAge() <= 90).count();
        count[9] = tempList.stream().filter(c -> c.getAge() > 90 && c.getAge() <= 100).count();
        
        
        return count;
    }

    private void populateTable(String[] c, long[] count){
        DefaultTableModel model = (DefaultTableModel) tblSummary.getModel();
        model.setRowCount(0);
        int i;
        for(i = 0; i < c.length ; i++){
            Object[] row = new Object[2];
            row[0] = c[i];
            row[1] = count[i];
            model.addRow(row);
        }
        
    }
    
        private boolean validateCommunity(JTextField ok){
            String text = ok.getText();
            if(ok.getText().isEmpty()){
                return false;
            }
            else
            {
                Pattern namePattern = Pattern.compile("[A-Za-z\\s-]+");
                Matcher nameMatcher = namePattern.matcher(text);
                if(nameMatcher.matches())
                {
                    return true;
                }
            }
            return false;
        }



}
